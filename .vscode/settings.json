{
  // ü¶Ä RUST ANALYZER - Production-grade linting and analysis
  "rust-analyzer.check.command": "clippy",
  "rust-analyzer.check.extraArgs": [
    "--all-targets",
    "--all-features",
    "--",
    // Critical anti-patterns (deny = compilation blocking)
    "-D",
    "clippy::unwrap_used",
    "-D",
    "clippy::expect_used",
    "-D",
    "clippy::panic",
    "-D",
    "clippy::as_conversions",
    "-D",
    "clippy::await_holding_lock",
    // Performance optimizations
    "-D",
    "clippy::inefficient_to_string",
    "-D",
    "clippy::large_stack_arrays",
    "-D",
    "clippy::large_const_arrays",
    "-D",
    "clippy::vec_init_then_push",
    // Memory safety
    "-D",
    "clippy::mem_forget",
    "-D",
    "clippy::cast_possible_truncation",
    // Async safety
    "-D",
    "clippy::async_yields_async",
    // Additional quality checks
    "-W",
    "clippy::pedantic",
    "-W",
    "clippy::nursery",
    "-W",
    "clippy::cargo"
  ],
  // Real-time diagnostics configuration
  "rust-analyzer.diagnostics.disabled": [],
  "rust-analyzer.diagnostics.warningsAsHint": [],
  "rust-analyzer.diagnostics.warningsAsInfo": [],
  "rust-analyzer.diagnostics.experimental.enable": true,
  // Documentation and hover improvements
  "rust-analyzer.hover.actions.enable": true,
  "rust-analyzer.hover.documentation.enable": true,
  "rust-analyzer.completion.addCallParenthesis": true,
  "rust-analyzer.completion.addCallArgumentSnippets": true,
  // Performance optimizations for large workspace
  "rust-analyzer.procMacro.enable": true,
  "rust-analyzer.cargo.buildScripts.enable": true,
  "rust-analyzer.checkOnSave.enable": true,
  // üìÅ FILE MANAGEMENT - Exclude build artifacts and dependencies
  "files.watcherExclude": {
    "**/target/**": true,
    "**/node_modules/**": true,
    "**/.git/**": true,
    "**/wasm-astro/pkg/**": true,
    "**/.dioxus/**": true,
    "**/astro-rust/**": true
  },
  "search.exclude": {
    "**/target": true,
    "**/node_modules": true,
    "**/.git": true,
    "**/wasm-astro/pkg": true,
    "**/.dioxus": true,
    "**/dist": true,
    "**/build": true,
    "**/astro-rust": true
  },
  // ‚úèÔ∏è EDITOR CONFIGURATION - Consistent formatting and quality
  "editor.rulers": [
    100
  ],
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.formatOnPaste": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit",
    "source.organizeImports": "explicit"
  },
  // Line ending consistency (Unix LF)
  "files.eol": "\n",
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,
  // üö® ANTI-PATTERN HIGHLIGHTING - Real-time visual feedback
  "todohighlight.keywords": [
    // Critical violations (red background)
    {
      "text": "unwrap()",
      "color": "#ffffff",
      "backgroundColor": "#dc3545",
      "overviewRulerColor": "#dc3545",
      "border": "2px solid #dc3545"
    },
    {
      "text": "expect(",
      "color": "#ffffff",
      "backgroundColor": "#dc3545",
      "overviewRulerColor": "#dc3545",
      "border": "2px solid #dc3545"
    },
    {
      "text": "panic!(",
      "color": "#ffffff",
      "backgroundColor": "#dc3545",
      "overviewRulerColor": "#dc3545",
      "border": "2px solid #dc3545"
    },
    // Performance issues (orange background)
    {
      "text": "HashMap::new()",
      "color": "#000000",
      "backgroundColor": "#fd7e14",
      "overviewRulerColor": "#fd7e14",
      "border": "1px solid #fd7e14"
    },
    {
      "text": "Vec::new()",
      "color": "#000000",
      "backgroundColor": "#fd7e14",
      "overviewRulerColor": "#fd7e14",
      "border": "1px solid #fd7e14"
    },
    {
      "text": "BTreeMap::new()",
      "color": "#000000",
      "backgroundColor": "#fd7e14",
      "overviewRulerColor": "#fd7e14"
    },
    {
      "text": "HashSet::new()",
      "color": "#000000",
      "backgroundColor": "#fd7e14",
      "overviewRulerColor": "#fd7e14"
    },
    // Development artifacts (yellow background)
    {
      "text": "todo!()",
      "color": "#000000",
      "backgroundColor": "#ffc107",
      "overviewRulerColor": "#ffc107"
    },
    {
      "text": "unimplemented!()",
      "color": "#000000",
      "backgroundColor": "#ffc107",
      "overviewRulerColor": "#ffc107"
    },
    {
      "text": "unreachable!()",
      "color": "#000000",
      "backgroundColor": "#ffc107",
      "overviewRulerColor": "#ffc107"
    },
    // WASM performance violations (purple background)
    {
      "text": "compute_state",
      "color": "#ffffff",
      "backgroundColor": "#6f42c1",
      "overviewRulerColor": "#6f42c1",
      "isWholeLine": false
    }
  ],
  // üîß LANGUAGE-SPECIFIC SETTINGS
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "editor.formatOnSave": true,
    "editor.semanticHighlighting.enabled": true
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml",
    "editor.formatOnSave": true
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    }
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.formatOnSave": true
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "files.trimTrailingWhitespace": false
  },
  // üé® THEME AND UI - Optimized for quality-focused development
  "workbench.colorCustomizations": {
    "editorError.foreground": "#dc3545",
    "editorWarning.foreground": "#fd7e14",
    "editorInfo.foreground": "#17a2b8"
  },
  // üîç SEARCH AND GIT INTEGRATION
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "git.autofetch": true,
  // Terminal configuration for quality commands
  "terminal.integrated.defaultProfile.osx": "bash",
  "terminal.integrated.profiles.osx": {
    "Quality Guardian": {
      "path": "/bin/bash",
      "args": [
        "-l",
        "-c",
        "echo 'üõ°Ô∏è Quality Guardian Terminal Ready' && make quality-check && bash"
      ]
    }
  },
  // Extension-specific settings
  "evenBetterToml.formatter.alignEntries": true,
  "evenBetterToml.formatter.indentTables": true,
  // Prettier configuration for frontend files
  "prettier.singleQuote": true,
  "prettier.trailingComma": "es5",
  "prettier.tabWidth": 2,
  "prettier.semi": true,
  // üìä QUALITY MONITORING - Track metrics and issues
  "problems.showCurrentInStatus": true,
  "editor.lightbulb.enabled": "onCode",
  "editor.quickSuggestions": {
    "other": "on",
    "comments": "on",
    "strings": "on"
  },
  // üåç INTERNATIONALIZATION - Support for 10-language spiritual platform
  "i18n-ally.localesPaths": [
    "frontend/src/i18n",
    "backend/src/i18n",
    "dioxus-app/src/i18n"
  ],
  "i18n-ally.keystyle": "nested",
  "i18n-ally.defaultNamespace": "common",
  "i18n-ally.enabledFrameworks": [
    "fluent",
    "icu"
  ],
  // Final reminder of our spiritual mission
  "workbench.startupEditor": "readme"
}
